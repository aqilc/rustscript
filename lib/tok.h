#include "util.h"


enum RS_TokenType {
	TT_KRETURN, TT_KLET, TT_KCONST, TT_KIF, TT_KELSE, TT_KFN, TT_KSTRUCT, TT_KTRAIT,
	
	TT_TU32, TT_TU8, TT_TU16, TT_TI32, TT_TI8, TT_TI16, TT_TBOOL,
	
	TT_POPENCBR, TT_PCLOSECBR, TT_POPENPAR, TT_PCLOSEPAR, TT_POPENSQBR, TT_PCLOSESQBR, TT_PARROW,
	
	TT_LAND, TT_LOR, TT_LTERNARY, TT_LNOT, // Logic
	
	TT_OPADD, TT_OPSUB, TT_OPMUL, TT_OPDIV, TT_OPMOD, TT_OPSET, TT_OPPOW, TT_OPDOT, TT_OPCOLON, // basic operations
	TT_OPADDSET, TT_OPSUBSET, TT_OPMULSET, TT_OPDIVSET, TT_OPMODSET, TT_OPBORSET,
		TT_OPBXORSET, TT_OPBANDSET, TT_OPBNOTSET, TT_OPBSHIFTRIGHTSET, TT_OPBSHIFTLEFTSET, // operations with assignment
	TT_OPBSHIFTRIGHT, TT_OPBSHIFTLEFT, // bitshifts
	TT_OPBXOR, TT_OPBOR, TT_OPBAND, TT_OPBNOT, // bitwise operations
	TT_OPINCR, TT_OPDECR, // Increment and decrement
	TT_OPGREATER, TT_OPLESS, TT_OPEQ, TT_OPGREATEQ, TT_OPLESSEQ, TT_OPNOTEQ, // Comparisons

	TT_IDENT, TT_INT, TT_FLOAT, TT_STRING,

	TT_EOF, TT_ERROR
};
typedef enum RS_TokenType RS_TokenType;

struct RS_Token {
	RS_TokenType type;
	char* data;
	u32 place;
	u32 len;
};
typedef struct RS_Token RS_Token;

RS_Token* tokenize(char* source);
void freetoks(RS_Token* tok);
